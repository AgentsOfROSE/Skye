digraph G {
	fontname = "Bitstream Vera Sans"
	fontsize = 8 

	node [
		 fontname = "Bitstream Vera Sans" 
		 fontsize = 8 
		 shape = "record" ,
		 style = "filled"
	] 

	edge [
		 fontname = "Bitstream Vera Sans"
		 fontsize = 8 
	]

	AbstractSprite [ 
 	 	 label = "{AbstractSprite\n\<\<Component\>\>\n|# dx : double\l# dy : double\l# shape : Shape\l|+ init(Param1 : double, Param2 : double, Param3 : double, Param4 : double) : void\l# computeNewBoundsAfterMoving(Param1 : Dimension) : Rectangle2D\l+ getShape() : Shape\l+ move(Param1 : Dimension) : void\l+ createIterator() : Iterator\l}",
	 	 color = black,
	 	 fillcolor = yellow
	]
	AnimationPanel [ 
 	 	 label = "{AnimationPanel\n|- serialVersionUID : long\l- sprites : List\l- animating : boolean\l- sleepTime : long\l|+ init(Param1 : long) : void\l+ add(Param1 : ISprite) : void\l+ getSize() : Dimension\l+ animate() : void\l+ reset() : void\l# paintComponent(Param1 : Graphics) : void\l  access$0(Param1 : AnimationPanel) : boolean\l  access$1(Param1 : AnimationPanel) : List\l  access$2(Param1 : AnimationPanel) : long\l}",
	 	 color = black,
	 	 fillcolor = white
	]
	AnimatorApp [ 
 	 	 label = "{AnimatorApp\n||+ init() : void\l+ main(Param1 : String[]) : void\l}",
	 	 color = black,
	 	 fillcolor = white
	]
	CircleSprite [ 
 	 	 label = "{CircleSprite\n\<\<Leaf\>\>\n||+ init(Param1 : double, Param2 : double, Param3 : double, Param4 : double) : void\l+ getShape() : Shape\l+ move(Param1 : Dimension) : void\l+ createIterator() : Iterator\l}",
	 	 color = black,
	 	 fillcolor = yellow
	]
	CompositeIterator [ 
 	 	 label = "{CompositeIterator\n|  stack : Stack\l|+ init(Param1 : Iterator) : void\l+ next() : AbstractSprite\l+ hasNext() : boolean\l+ next() : Object\l}",
	 	 color = black,
	 	 fillcolor = white
	]
	DoubleTowerSprite [ 
 	 	 label = "{DoubleTowerSprite\n\<\<Composite\>\>\n|  spriteComponents : ArrayList_AbstractSprite\l|+ init(Param1 : double, Param2 : double, Param3 : double, Param4 : double) : void\l+ getShape() : Shape\l+ move(Param1 : Dimension) : void\l+ createIterator() : Iterator\l}",
	 	 color = black,
	 	 fillcolor = yellow
	]
	ISprite [ 
 	 	 label = "{ISprite\n\<\<Interface\>\>\n||+ move(Param1 : Dimension) : void\l+ getShape() : Shape\l+ createIterator() : Iterator\l}",
	 	 color = black,
	 	 fillcolor = white
	]
	MainWindow [ 
 	 	 label = "{MainWindow\n|- frame : JFrame\l- actionPanel : JPanel\l- animationPanel : AnimationPanel\l- moveButton : JButton\l- createButton : JButton\l- resetButton : JButton\l|+ init(Param1 : String, Param2 : long) : void\l- createWidgets(Param1 : String, Param2 : long) : void\l- assignActions() : void\l+ show() : void\l  access$0(Param1 : MainWindow) : AnimationPanel\l  access$1(Param1 : MainWindow) : JButton\l  access$2(Param1 : MainWindow) : JButton\l}",
	 	 color = black,
	 	 fillcolor = white
	]
	NullIterator [ 
 	 	 label = "{NullIterator\n||+ init() : void\l+ next() : Object\l+ hasNext() : boolean\l+ remove() : void\l}",
	 	 color = black,
	 	 fillcolor = white
	]
	RectangleSprite [ 
 	 	 label = "{RectangleSprite\n\<\<Leaf\>\>\n||+ init(Param1 : double, Param2 : double, Param3 : double, Param4 : double) : void\l+ getShape() : Shape\l+ move(Param1 : Dimension) : void\l+ createIterator() : Iterator\l}",
	 	 color = black,
	 	 fillcolor = yellow
	]
	SnowmanSprite [ 
 	 	 label = "{SnowmanSprite\n\<\<Composite\>\>\n|  spriteComponents : ArrayList_AbstractSprite\l|+ init(Param1 : double, Param2 : double, Param3 : double, Param4 : double) : void\l+ move(Param1 : Dimension) : void\l+ getShape() : Shape\l+ createIterator() : Iterator\l}",
	 	 color = black,
	 	 fillcolor = yellow
	]
	SpriteFactory [ 
 	 	 label = "{SpriteFactory\n|+ DX : double\l+ DY : double\l+ WIDTH : double\l+ HEIGHT : double\l- random : Random\l- sprites : List\l|  clinit() : void\l+ init() : void\l+ computeRandomLocation(Param1 : Dimension) : Point2D\l+ createRandomSprite(Param1 : Dimension) : ISprite\l}",
	 	 color = black,
	 	 fillcolor = white
	]
	TowerSprite [ 
 	 	 label = "{TowerSprite\n\<\<Composite\>\>\n|  spriteComponents : ArrayList_AbstractSprite\l|+ init(Param1 : double, Param2 : double, Param3 : double, Param4 : double) : void\l+ getShape() : Shape\l+ move(Param1 : Dimension) : void\l+ createIterator() : Iterator\l}",
	 	 color = black,
	 	 fillcolor = yellow
	]

	edge [
		arrowhead = "empty"
	]

	CircleSprite -> AbstractSprite
	DoubleTowerSprite -> AbstractSprite
	RectangleSprite -> AbstractSprite
	SnowmanSprite -> AbstractSprite
	TowerSprite -> AbstractSprite


	edge [
		style = "dashed"
		arrowhead = "normal"
	]

	AbstractSprite->ISprite


	edge [
		style = "solid"
		arrowhead = "vee"
	]

	DoubleTowerSprite->AbstractSprite[label=""]
	MainWindow->AnimationPanel[label=""]
	SnowmanSprite->AbstractSprite[label=""]
	TowerSprite->AbstractSprite[label=""]


	edge [
		style = "dashed"
		arrowhead = "vee"
	]

	AnimationPanel->ISprite
	AnimationPanel->AnimationPanel
	AnimatorApp->MainWindow
	CircleSprite->NullIterator
	CompositeIterator->AbstractSprite
	DoubleTowerSprite->TowerSprite
	DoubleTowerSprite->ISprite
	DoubleTowerSprite->CompositeIterator
	MainWindow->MainWindow
	RectangleSprite->NullIterator
	SnowmanSprite->CircleSprite
	SnowmanSprite->ISprite
	SnowmanSprite->CompositeIterator
	SpriteFactory->ISprite
	TowerSprite->RectangleSprite
	TowerSprite->ISprite
	TowerSprite->CompositeIterator

}
